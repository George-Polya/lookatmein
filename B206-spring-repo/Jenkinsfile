pipeline {
    agent any

    stages {

        
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    dir("B206-spring-repo"){
                        sh "pwd"
                        sh 'chmod +x gradlew'
                        sh './gradlew clean booJar'
                    }
                }
            }
        }
     
        stage('Build spring') {
            steps {
                // spring 빌드 스크립트
                echo "Spring build"
                sh "pwd"
                dir("B206-spring-repo"){
                    
                    sh '''
                        ssh -i ~/.ssh/id_rsa ubuntu@i10b206.p.ssafy.io "rm -rf /home/ubuntu/spring && mkdir /home/ubuntu/spring"
                        scp -i ~/.ssh/id_rsa ./build/libs/lam-0.0.1-SNAPSHOT.jar ubuntu@i10b206.p.ssafy.io:/home/ubuntu/spring/lam-0.0.1-SNAPSHOT.jar
                        scp -i ~/.ssh/id_rsa ./dockerfile ubuntu@i10b206.p.ssafy.io:/home/ubuntu/spring/dockerfile
                        scp -i ~/.ssh/id_rsa ./init.sh ubuntu@i10b206.p.ssafy.io:/home/ubuntu/spring/init.sh
                    '''
                }
                

                echo "Spring build Completed"
            }
        }
    }
}